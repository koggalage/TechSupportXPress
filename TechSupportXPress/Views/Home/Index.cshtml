@model TechSupportXPress.ViewModels.TicketDashboardViewModel
@using TechSupportXPress.Resources

@{
    ViewData["Title"] = "Help Desk Dashboard";
}
<div class="row row-cols-1 row-cols-lg-2 row-cols-xl-2 row-cols-xxl-4">
    <div class="col">
        <div class="card overflow-hidden rounded-4">
            <div class="card-body p-2">
                <div class="d-flex align-items-stretch justify-content-between  rounded-4 overflow-hidden bg-pink">
                    <div class="w-50 p-3">
                        <p class="text-white">Total Tickets</p>
                        <h4 class="text-white">@Model.TicketsSummary.TotalTickets</h4>
                    </div>
                    <div class="w-50 p-3">
                        <p class="mb-3 text-white text-end">@Model.TicketsSummary.TotalTickets% <i class="bi bi-arrow-up"></i></p>
                        <div id="chart1"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card overflow-hidden  rounded-4">
            <div class="card-body p-2">
                <div class="d-flex align-items-stretch justify-content-between rounded-4 overflow-hidden bg-purple">
                    <div class="w-50 p-3">
                        <p class="text-white">Assigned Tickets</p>
                        <h4 class="text-white">@Model.TicketsSummary.AssignedTickets</h4>
                    </div>
                    <div class="w-50  p-3">
                        <p class="mb-3 text-white text-end">@Model.TicketsSummary.AssignedTickets% <i class="bi bi-arrow-down"></i></p>
                        <div id="chart2"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card overflow-hidden rounded-4">
            <div class="card-body p-2">
                <div class="d-flex align-items-stretch justify-content-between rounded-4 overflow-hidden bg-success">
                    <div class="w-50 p-3">
                        <p class="text-white">Closed Tickets</p>
                        <h4 class="text-white">@Model.TicketsSummary.ClosedTickets</h4>
                    </div>
                    <div class="w-50 p-3">
                        <p class="mb-3 text-white text-end">@Model.TicketsSummary.ClosedTickets% <i class="bi bi-arrow-up"></i></p>
                        <div id="chart3"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card overflow-hidden rounded-4">
            <div class="card-body p-2">
                <div class="d-flex align-items-stretch justify-content-between rounded-4 overflow-hidden bg-orange">
                    <div class="w-50 p-3">
                        <p class="text-white">Resolved Tickets</p>
                        <h4 class="text-white">@Model.TicketsSummary.ResolvedTickets</h4>
                    </div>
                    <div class="w-50 p-3">
                        <p class="mb-3 text-white text-end">@Model.TicketsSummary.ResolvedTickets% <i class="bi bi-arrow-up"></i></p>
                        <div id="chart4"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div><!--end row-->
@if (User.IsInRole(Constants.ROLE_ADMIN))
{
    @if (ViewBag.SlaBreaches > 0)
    {
        <div class="p-4 mb-4 text-white rounded-3" style="background: linear-gradient(135deg, #e53935, #b71c1c); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2); border-left: 6px solid #ffeb3b;">
            <div class="d-flex align-items-center">
                <div class="me-3">
                    <i class="bi bi-exclamation-triangle-fill fs-3 text-warning"></i>
                </div>
                <div>
                    <h5 class="fw-bold mb-1">SLA Breach Alert</h5>
                    <p class="mb-0">
                        <strong>@ViewBag.SlaBreaches</strong> ticket(s) have breached the SLA threshold (over 2 minutes without resolution).
                    </p>
                </div>
            </div>
        </div>
    }
}




<div class="row">
    <div class="col-md-6 mb-4">
        <div class="card overflow-hidden rounded-4 bg-info">
            <div class="card-body p-2 text-center">
                <p class="text-white">Ticket Status Distribution</p>
                <canvas id="ticketPieChart" style="background-color: #fff; max-height: 150px;"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6 mb-4">
        <div class="card overflow-hidden rounded-4" style="background-color: #6f42c1;">
            <div class="card-body p-2 text-center">
                <p class="text-white mb-2">Tickets by Priority</p>
                <canvas id="ticketBarChart" style="background-color: #fff; max-height: 150px;"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6 mb-4">
        <div class="card overflow-hidden rounded-4" style="background-color: #0d6efd;">
            <div class="card-body p-2 text-center">
                <p class="text-white mb-2">Tickets by Priority (Last 7 Days)</p>
                <canvas id="ticketLineChart" style="background-color: #fff; max-height: 150px;"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-6 mb-4">
        <div class="card overflow-hidden rounded-4" style="background-color: #198754;">
            <div class="card-body p-2 text-center">
                <p class="text-white mb-2">Open vs Closed</p>
                <canvas id="openClosedChart" style="background-color: #fff; max-height: 150px;"></canvas>
            </div>
        </div>
    </div>
</div>






<div class="card rounded-4">
    <div class="card-body">
        <div class="d-flex align-items-center">
            <h6 class="mb-0">Recent Tickets</h6>
        </div>
        <div class="table-responsive mt-2">
            <table id="example" class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Priority)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreatedBy)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CreatedOn)
                        </th>
                        <th>No of Comments</th>
                        <th>Comments</th>
                        <th>View</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Tickets)
                    {
                        var colorcode = "Red";
                        if (item.Status.Code == "Resolved")
                        {
                            colorcode = "Green";
                        }
                        else if (item.Status.Code == "Escalated")
                        {
                            colorcode = "Yellow";
                        }
                        else if (item.Status.Code == "InProgress")
                        {
                            colorcode = "Purple";
                        }
                        else if (item.Status.Code == "Closed")
                        {
                            colorcode = "Green";
                        }
                        else if (item.Status.Code == "AwaitingAssigment")
                        {
                            colorcode = "Red";
                        }
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Priority.Description)
                            </td>
                            <td style="background-color:@colorcode">
                                @Html.DisplayFor(modelItem => item.Status.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedBy.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedOn)
                            </td>
                            <td style="text-align:center">
                                <a asp-action="TicketsComments" asp-controller="Comments" asp-route-id="@item.Id"> @item.TicketComments.Count()</a>
                            </td>
                            <td>
                                <a class="btn btn-secondary" asp-action="TicketsComments" asp-controller="Comments" asp-route-id="@item.Id">Comments</a>
                            </td>
                            <td>
                                <a class="btn btn-warning" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('ticketPieChart').getContext('2d');
    const ticketPieChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: ['Pending', 'Assigned', 'Resolved', 'Closed', 'ReOpened'],
            datasets: [{
                label: 'Ticket Statuses',
                data: [
    @Model.TicketsSummary.PendingTickets,
    @Model.TicketsSummary.AssignedTickets,
    @Model.TicketsSummary.ResolvedTickets,
    @Model.TicketsSummary.ClosedTickets,
    @Model.TicketsSummary.ReOpenedTickets
                    ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.7)',   // Pending
                    'rgba(54, 162, 235, 0.7)',   // Assigned
                    'rgba(75, 192, 192, 0.7)',   // Resolved
                    'rgba(153, 102, 255, 0.7)',  // Closed
                    'rgba(255, 206, 86, 0.7)'    // ReOpened
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 206, 86, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        }
    });
</script>

<script>
    const barCtx = document.getElementById('ticketBarChart').getContext('2d');
    const ticketBarChart = new Chart(barCtx, {
        type: 'bar',
        data: {
            labels: ['Low', 'Medium', 'High', 'Critical'],
            datasets: [{
                label: 'Tickets by Priority',
                data: [
    @Model.Tickets.Count(t => t.Priority.Description == "Low"),
    @Model.Tickets.Count(t => t.Priority.Description == "Medium"),
    @Model.Tickets.Count(t => t.Priority.Description == "High"),
    @Model.Tickets.Count(t => t.Priority.Description == "Critical")
                    ],
                backgroundColor: [
                    'rgba(75, 192, 192, 0.7)',
                    'rgba(255, 206, 86, 0.7)',
                    'rgba(255, 99, 132, 0.7)',
                    'rgba(153, 102, 255, 0.7)'
                ],
                borderColor: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(153, 102, 255, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: false
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        precision: 0
                    }
                }
            }
        }
    });
</script>

<script>
    const lineCtx = document.getElementById('ticketLineChart').getContext('2d');

    const labels = [@Html.Raw(ViewBag.ChartLabels)];
    const colors = [
        'rgba(255, 99, 132, 1)',  // Red
        'rgba(54, 162, 235, 1)',  // Blue
        'rgba(255, 206, 86, 1)',  // Yellow
        'rgba(75, 192, 192, 1)',  // Teal
        'rgba(153, 102, 255, 1)'  // Purple
    ];

    const datasets = [];
    let i = 0;

    @foreach (var entry in (Dictionary<string, List<int>>)ViewBag.ChartData)
    {
        <text>
            datasets.push({
                label: '@entry.Key',
                data: [@string.Join(",", entry.Value)],
                borderColor: colors[i % colors.length],
                backgroundColor: colors[i % colors.length].replace('1)', '0.2)'),
                tension: 0.3,
                fill: false,
                pointRadius: 4,
                pointHoverRadius: 6
            });
        i++;
        </text>
    }

        const ticketLineChart = new Chart(lineCtx, {
        type: 'line',
        data: {
            labels: labels,
            datasets: datasets
        },
        options: {
            responsive: true,
            plugins: {
                tooltip: {
                    enabled: true,
                    mode: 'index',
                    intersect: false
                },
                legend: {
                    position: 'top'
                },
                title: {
                    display: true,
                    text: 'Ticket Trend (Last 7 Days by Priority)'
                }
            },
            interaction: {
                mode: 'nearest',
                axis: 'x',
                intersect: false
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        precision: 0
                    }
                }
            }
        }
    });
</script>

<script>
    const openClosedCtx = document.getElementById('openClosedChart').getContext('2d');
    const openClosedChart = new Chart(openClosedCtx, {
        type: 'doughnut',
        data: {
            labels: ['Open', 'Closed'],
            datasets: [{
                label: 'Ticket Status',
                data: [@ViewBag.OpenTicketCount, @ViewBag.ClosedTicketCount],
                backgroundColor: [
                    'rgba(255, 193, 7, 0.7)',   // Open (yellow)
                    'rgba(40, 167, 69, 0.7)'    // Closed (green)
                ],
                borderColor: [
                    'rgba(255, 193, 7, 1)',
                    'rgba(40, 167, 69, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'bottom'
                },
                tooltip: {
                    enabled: true
                }
            }
        }
    });
</script>




